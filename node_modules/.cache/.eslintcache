[{"C:\\Users\\Avanza\\Desktop\\React js\\Book Project\\book-project\\src\\index.js":"1","C:\\Users\\Avanza\\Desktop\\React js\\Book Project\\book-project\\src\\App.js":"2","C:\\Users\\Avanza\\Desktop\\React js\\Book Project\\book-project\\src\\reportWebVitals.js":"3","C:\\Users\\Avanza\\Desktop\\React js\\Book Project\\book-project\\src\\component\\NavigationBar.js":"4","C:\\Users\\Avanza\\Desktop\\React js\\Book Project\\book-project\\src\\component\\Welcome.js":"5","C:\\Users\\Avanza\\Desktop\\React js\\Book Project\\book-project\\src\\component\\Footer.js":"6","C:\\Users\\Avanza\\Desktop\\React js\\Book Project\\book-project\\src\\component\\UserList.js":"7","C:\\Users\\Avanza\\Desktop\\React js\\Book Project\\book-project\\src\\services\\store.js":"8","C:\\Users\\Avanza\\Desktop\\React js\\Book Project\\book-project\\src\\services\\rootReducer.js":"9","C:\\Users\\Avanza\\Desktop\\React js\\Book Project\\book-project\\src\\services\\users\\userReducer.js":"10","C:\\Users\\Avanza\\Desktop\\React js\\Book Project\\book-project\\src\\services\\users\\userTypes.js":"11","C:\\Users\\Avanza\\Desktop\\React js\\Book Project\\book-project\\src\\services\\users\\userActions.js":"12","C:\\Users\\Avanza\\Desktop\\React js\\Book Project\\book-project\\src\\services\\books\\bookActions.js":"13","C:\\Users\\Avanza\\Desktop\\React js\\Book Project\\book-project\\src\\services\\books\\bookTypes.js":"14","C:\\Users\\Avanza\\Desktop\\React js\\Book Project\\book-project\\src\\services\\books\\bookReducer.js":"15","C:\\Users\\Avanza\\Desktop\\React js\\Book Project\\book-project\\src\\component\\user\\Register.js":"16","C:\\Users\\Avanza\\Desktop\\React js\\Book Project\\book-project\\src\\component\\user\\Login.js":"17","C:\\Users\\Avanza\\Desktop\\React js\\Book Project\\book-project\\src\\services\\index.js":"18","C:\\Users\\Avanza\\Desktop\\React js\\Book Project\\book-project\\src\\services\\auth\\authActions.js":"19","C:\\Users\\Avanza\\Desktop\\React js\\Book Project\\book-project\\src\\services\\auth\\authTypes.js":"20","C:\\Users\\Avanza\\Desktop\\React js\\Book Project\\book-project\\src\\component\\Book\\BookList.js":"21","C:\\Users\\Avanza\\Desktop\\React js\\Book Project\\book-project\\src\\component\\Book\\Book.js":"22"},{"size":362,"mtime":1616152423641,"results":"23","hashOfConfig":"24"},{"size":1239,"mtime":1616148673108,"results":"25","hashOfConfig":"24"},{"size":362,"mtime":499162500000,"results":"26","hashOfConfig":"24"},{"size":1418,"mtime":1616148128926,"results":"27","hashOfConfig":"24"},{"size":709,"mtime":1615896697143,"results":"28","hashOfConfig":"24"},{"size":583,"mtime":1615550402332,"results":"29","hashOfConfig":"24"},{"size":7410,"mtime":1616069906065,"results":"30","hashOfConfig":"24"},{"size":223,"mtime":1615989800514,"results":"31","hashOfConfig":"24"},{"size":258,"mtime":1615990697453,"results":"32","hashOfConfig":"24"},{"size":696,"mtime":1615900678738,"results":"33","hashOfConfig":"24"},{"size":163,"mtime":1615899241335,"results":"34","hashOfConfig":"24"},{"size":873,"mtime":1615968949046,"results":"35","hashOfConfig":"24"},{"size":2252,"mtime":1616067892789,"results":"36","hashOfConfig":"24"},{"size":308,"mtime":1616067356085,"results":"37","hashOfConfig":"24"},{"size":1029,"mtime":1616067396047,"results":"38","hashOfConfig":"24"},{"size":5119,"mtime":1616135402867,"results":"39","hashOfConfig":"24"},{"size":4630,"mtime":1616148806523,"results":"40","hashOfConfig":"24"},{"size":35,"mtime":1616135681170,"results":"41","hashOfConfig":"24"},{"size":1126,"mtime":1616136354266,"results":"42","hashOfConfig":"24"},{"size":164,"mtime":1616070837480,"results":"43","hashOfConfig":"24"},{"size":8537,"mtime":1616069842660,"results":"44","hashOfConfig":"24"},{"size":10049,"mtime":1616069845341,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"lwrbc9",{"filePath":"48","messages":"49","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"52"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":2,"source":"72","usedDeprecatedRules":"52"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":8,"source":"75","usedDeprecatedRules":"52"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"52"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"52"},"C:\\Users\\Avanza\\Desktop\\React js\\Book Project\\book-project\\src\\index.js",["96"],"C:\\Users\\Avanza\\Desktop\\React js\\Book Project\\book-project\\src\\App.js",["97","98"],"C:\\Users\\Avanza\\Desktop\\React js\\Book Project\\book-project\\src\\reportWebVitals.js",[],["99","100"],"C:\\Users\\Avanza\\Desktop\\React js\\Book Project\\book-project\\src\\component\\NavigationBar.js",["101"],"import React from \"react\";\r\nimport { Navbar, Nav } from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\r\nimport {faUserPlus, faSignInAlt, faSignOutAlt} from '@fortawesome/free-solid-svg-icons';\r\n\r\nclass NavigationBars extends React.Component {\r\n    render() {\r\n        return (\r\n\r\n            <Navbar bg=\"dark\" variant=\"dark\">\r\n                <Link to={\"\"} className=\"navbar-brand\">\r\n                    <img src=\"https://pngimg.com/uploads/book/book_PNG2109.png\"\r\n                        width=\"25\"\r\n                        height=\"25\"\r\n                        alt=\"logo\"\r\n                    />{''}Book Store\r\n                </Link>\r\n                <Nav className=\"mr-auto\">\r\n                    <Link to=\"/add\" className=\"nav-link\">Add Book</Link>\r\n                    <Link to=\"/list\" className=\"nav-link\">Book List</Link>\r\n                    <Link to=\"/users\" className=\"nav-link\">User List</Link>\r\n\r\n\r\n                </Nav>\r\n\r\n                <Nav className=\"navbar-right\">\r\n                 \r\n                    <Link to={\"register\"} className=\"nav-link\"><FontAwesomeIcon icon={faUserPlus} /> Register</Link>\r\n                    <Link to={\"login\"} className=\"nav-link\"><FontAwesomeIcon icon={faSignInAlt} /> Login</Link>\r\n\r\n\r\n                </Nav>\r\n\r\n            </Navbar>\r\n        )\r\n    }\r\n}\r\nexport default NavigationBars;","C:\\Users\\Avanza\\Desktop\\React js\\Book Project\\book-project\\src\\component\\Welcome.js",[],"C:\\Users\\Avanza\\Desktop\\React js\\Book Project\\book-project\\src\\component\\Footer.js",[],"C:\\Users\\Avanza\\Desktop\\React js\\Book Project\\book-project\\src\\component\\UserList.js",[],"C:\\Users\\Avanza\\Desktop\\React js\\Book Project\\book-project\\src\\services\\store.js",[],"C:\\Users\\Avanza\\Desktop\\React js\\Book Project\\book-project\\src\\services\\rootReducer.js",[],"C:\\Users\\Avanza\\Desktop\\React js\\Book Project\\book-project\\src\\services\\users\\userReducer.js",[],"C:\\Users\\Avanza\\Desktop\\React js\\Book Project\\book-project\\src\\services\\users\\userTypes.js",[],"C:\\Users\\Avanza\\Desktop\\React js\\Book Project\\book-project\\src\\services\\users\\userActions.js",["102","103"],"\r\nimport { FETCH_USER_REQUEST, FETCH_USER_SUCCESS, FETCH_USER_FAILURE } from './userTypes';\r\n\r\nimport axios from 'axios';\r\n\r\nexport const fetchUser =()=>{\r\n\r\n    return dispatch =>{\r\n        dispatch(fetchUserRequest());\r\n        axios.get(\"https://randomapi.com/api/6de6abfedb24f889e0b5f675edc50deb?fmt=raw&sole\").\r\n        then(response=>{\r\n                dispatch(fetchUserSuccess(response.data));\r\n        }).\r\n        catch(error =>{\r\n                    dispatch(fetchUserFailure(error.message));\r\n        });\r\n    }\r\n}\r\n\r\nconst fetchUserRequest = Users => {\r\n    return {\r\n        type: FETCH_USER_REQUEST,\r\n        payload: Users\r\n    };\r\n};\r\n\r\nconst fetchUserSuccess = error => {\r\n    return {\r\n        type: FETCH_USER_SUCCESS,\r\n        payload: error \r\n    };\r\n};\r\n\r\nconst fetchUserFailure = () => {\r\n    return {\r\n        type: FETCH_USER_FAILURE\r\n    };\r\n};\r\n","C:\\Users\\Avanza\\Desktop\\React js\\Book Project\\book-project\\src\\services\\books\\bookActions.js",["104","105","106","107","108","109","110","111"],"\r\nimport { SAVE_BOOK_REQUEST, BOOK_SUCCESS, BOOK_FAILURE,FETCH_BOOK_REQUEST,UPDATE_BOOK_REQUEST,DELETE_BOOK_REQUEST} from './bookTypes';\r\n\r\nimport axios from 'axios';\r\n\r\nexport const saveBook = book =>{\r\n\r\n    return dispatch =>{\r\n        dispatch(saveBookRequest());\r\n        axios.post(\"http://localhost:8081/rest/books\", book).\r\n        then(response=>{\r\n                dispatch(BookSuccess(response.data));\r\n        }).\r\n        catch(error =>{\r\n                    dispatch(BookFailure(error.message));\r\n        });\r\n    }\r\n}\r\n\r\nconst saveBookRequest =() => {\r\n    return {\r\n        type: SAVE_BOOK_REQUEST\r\n    };\r\n};\r\n\r\n\r\nconst fetchBookRequest =() => {\r\n    return {\r\n        type: FETCH_BOOK_REQUEST\r\n    };\r\n};\r\nexport const fetchBook = bookId =>{\r\n\r\n    return dispatch =>{\r\n        dispatch(fetchBookRequest());\r\n        axios.get(\"http://localhost:8081/rest/books/\" + bookId).\r\n        then(response=>{\r\n                dispatch(BookSuccess(response.data));\r\n        }).\r\n        catch(error =>{\r\n                    dispatch(BookFailure(error.message));\r\n        });\r\n    }\r\n}\r\nconst updateBookRequest =() => {\r\n    return {\r\n        type: UPDATE_BOOK_REQUEST\r\n    };\r\n};\r\n\r\nexport const updateBook = book =>{\r\n\r\n    return dispatch =>{\r\n        dispatch(updateBookRequest());\r\n        axios.put(\"http://localhost:8081/rest/books\", book).\r\n        then(response=>{\r\n                dispatch(BookSuccess(response.data));\r\n        }).\r\n        catch(error =>{\r\n                    dispatch(BookFailure(error.message));\r\n        });\r\n    }\r\n}\r\n\r\n\r\nconst BookSuccess = book => {\r\n    return {\r\n        type: BOOK_SUCCESS,\r\n        payload: book \r\n    };\r\n};\r\n\r\nconst BookFailure = error => {\r\n    return {\r\n        type: BOOK_FAILURE,\r\n        payload :error\r\n    };\r\n};\r\nconst deleteBookRequest =() => {\r\n    return {\r\n        type: DELETE_BOOK_REQUEST\r\n    };\r\n};\r\nexport const deleteBook = bookId =>{\r\n\r\n    return dispatch =>{\r\n        dispatch(deleteBookRequest());\r\n        axios.delete(\"\thttp://localhost:8081/rest/books/\" + bookId).\r\n        then(response=>{\r\n                dispatch(BookSuccess(response.data));\r\n        }).\r\n        catch(error =>{\r\n                    dispatch(BookFailure(error.message));\r\n        });\r\n    }\r\n}","C:\\Users\\Avanza\\Desktop\\React js\\Book Project\\book-project\\src\\services\\books\\bookTypes.js",[],"C:\\Users\\Avanza\\Desktop\\React js\\Book Project\\book-project\\src\\services\\books\\bookReducer.js",[],"C:\\Users\\Avanza\\Desktop\\React js\\Book Project\\book-project\\src\\component\\user\\Register.js",[],"C:\\Users\\Avanza\\Desktop\\React js\\Book Project\\book-project\\src\\component\\user\\Login.js",[],"C:\\Users\\Avanza\\Desktop\\React js\\Book Project\\book-project\\src\\services\\index.js",[],"C:\\Users\\Avanza\\Desktop\\React js\\Book Project\\book-project\\src\\services\\auth\\authActions.js",[],"C:\\Users\\Avanza\\Desktop\\React js\\Book Project\\book-project\\src\\services\\auth\\authTypes.js",[],"C:\\Users\\Avanza\\Desktop\\React js\\Book Project\\book-project\\src\\component\\Book\\BookList.js",["112"],"import React from \"react\";\r\nimport { Card, Table, Image, ButtonGroup, Button,InputGroup,FormControl } from \"react-bootstrap\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faFastBackward, faFastForward, faList, faStepBackward, faStepForward,faEdit, faTrash\r\n } from '@fortawesome/free-solid-svg-icons'\r\n import { connect } from 'react-redux';\r\n\r\nimport axios from 'axios';\r\nimport { Link } from \"react-router-dom\";\r\nimport { deleteBook } from '../../services/books/bookActions';\r\n\r\nclass BookList extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            books: [],\r\n            currentPage: 1,\r\n            bookPerPage: 5\r\n        }\r\n    }\r\n    componentDidMount() {\r\n       this.findAllBooks();\r\n    }\r\n    findAllBooks(){\r\n        fetch(\"http://localhost:8081/rest/books\")\r\n        .then(response => response.json())\r\n        .then((data) => {\r\n            this.setState({ books: data });\r\n        });\r\n    }\r\n\r\n    deleteBook(bookId) {\r\n        // axios.delete(\"\thttp://localhost:8081/rest/books/\" + bookId)\r\n        //     .then(response => {\r\n        //         if (response.data != null) {\r\n        //             alert(\"Book Delete Successful\");\r\n        //             this.setState({\r\n        //                 books: this.state.books.filter(book => book.id !== bookId)\r\n        //             });\r\n        //         }\r\n        //     })\r\n\r\n        this.props.deleteBook(bookId)\r\n        if (this.props.deleteBookObject != null) {\r\n                        alert(\"Book Delete Successful\");\r\n                        this.setState({\r\n                            books: this.state.books.filter(book => book.id !== bookId)\r\n                        });\r\n                    }\r\n                \r\n\r\n    }\r\n\r\n    changePage =event=>{\r\n        this.setState({\r\n            [event.target.name]: parseInt(event.target.value)\r\n        });\r\n    };\r\n\r\n    firstPage =()=>{\r\n        if(this.state.currentPage >1){\r\n            this.setState({\r\n                currentPage:1\r\n            })\r\n        }\r\n    };\r\n\r\n    prevPage =()=>{\r\n        if(this.state.currentPage >1){\r\n            this.setState({\r\n                currentPage:this.state.currentPage-1\r\n            })\r\n        }\r\n        \r\n    };\r\n    nextPage =() => {\r\n        if(this.state.currentPage < Math.ceil(this.state.books.length/this.state.bookPerPage)){\r\n            this.setState({\r\n                currentPage:this.state.currentPage + 1\r\n            })\r\n        }\r\n    };\r\n    lastPage =()=>{\r\n        if(this.state.currentPage < Math.ceil(this.state.books.length/this.state.bookPerPage)){\r\n            this.setState({\r\n                currentPage: Math.ceil(this.state.books.length/  this.state.bookPerPage)\r\n            })\r\n        }\r\n        \r\n    };\r\n\r\n\r\n\r\n    render() {\r\n        const { books, currentPage, bookPerPage } = this.state;\r\n        const lastindex = currentPage * bookPerPage;\r\n        const firstindex = lastindex - bookPerPage;\r\n        const currentUsers = books.slice(firstindex, lastindex);\r\n        const totalpages = Math.ceil( books.length / bookPerPage);\r\n\r\n        const pageNubCss = {\r\n            width: \"45px\",\r\n            border: \"1px solid #17A2B8\",\r\n            color: \"#17A2B8\",\r\n            textAlign: \"center\",\r\n            fontweight: \"bold\"\r\n        }\r\n        return (\r\n\r\n            <Card className=\" border border-dark bg-dark text-white\">\r\n                <Card.Header> <FontAwesomeIcon icon={faList} /> Book List</Card.Header>\r\n                <Card.Body>\r\n                    <Table bordered hover striped variant=\"dark\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th>Title</th>\r\n                                <th>Author</th>\r\n                                <th>ISBN Number</th>\r\n                                <th>Price</th>\r\n                                <th>Language</th>\r\n                                <th>Actions</th>\r\n\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {books.length === 0 ?\r\n                                <tr align=\"center\">\r\n                                    <td colSpan=\"6\"> Books avaiable</td>\r\n\r\n                                </tr> :\r\n                                currentUsers.map((book,index) => (\r\n                                    <tr key={index}>\r\n                                        <td>\r\n                                            <Image src={book.coverPhotoURL} roundedCircle width=\"25\" height=\"25\" /> {book.title}\r\n                                        </td>\r\n                                        <td>{book.author}</td>\r\n                                        <td>{book.isbnNumber}</td>\r\n                                        <td>{book.price}</td>\r\n                                        <td>{book.language}</td>\r\n                                        <td>\r\n                                            <ButtonGroup>\r\n\r\n                                                <Link to={\"edit/\"+book.id} className=\"btn btn-sm btn-outline-primary\">\r\n                                                    <FontAwesomeIcon icon={faEdit} />\r\n\r\n                                                </Link> {' '}\r\n\r\n                                                \r\n                                                < Button size=\"sm\" variant=\"outline-danger\"\r\n                                                    onClick={this.deleteBook.bind(this, book.id)}>\r\n                                                    <FontAwesomeIcon icon={faTrash} />\r\n\r\n                                                </Button>\r\n                                            </ButtonGroup>\r\n                                        </td>\r\n\r\n                                    </tr>\r\n                                ))\r\n                            }\r\n                        </tbody>\r\n                     \r\n                    </Table>\r\n                </Card.Body>\r\n                <Card.Footer>\r\n                    <div style={{ \"float\": \"left\" }}>\r\n                        Showing Page {currentPage} of {totalpages}\r\n\r\n                    </div>\r\n                    <div style={{ \"float\": \"right\" }}>\r\n                        <InputGroup size=\"sm\">\r\n                            <InputGroup.Prepend>\r\n                                <Button type=\"button\" variant=\"outline-info\" disabled={currentPage === 1 ? true : false}\r\n                                    onClick={this.firstPage}\r\n                                >\r\n                                    <FontAwesomeIcon icon={faFastBackward} />  First\r\n                                </Button>\r\n                                <Button type=\"button\" variant=\"outline-info\" disabled={currentPage === 1 ? true : false}\r\n                                    onClick={this.prevPage}\r\n\r\n                                >\r\n                                    <FontAwesomeIcon icon={faStepBackward} />  Prev\r\n                                </Button>\r\n                            </InputGroup.Prepend>\r\n                            <FormControl style={pageNubCss} className=\"bg-dark\"  name=\"currentPage\"\r\n                            value={currentPage} onChange={this.changePage}\r\n                            />\r\n                            <InputGroup.Append>\r\n                                <Button type=\"button\" variant=\"outline-info\" disabled={currentPage === totalpages ? true : false}\r\n                                    onClick={this.nextPage}\r\n\r\n                                >\r\n                                    <FontAwesomeIcon icon={faStepForward} /> Next\r\n                                </Button>\r\n                                <Button type=\"button\" variant=\"outline-info\" disabled={currentPage === totalpages ? true : false}\r\n                                    onClick={this.lastPage}\r\n\r\n                                >\r\n                                    <FontAwesomeIcon icon={faFastForward} />  Last\r\n                                </Button>\r\n                            </InputGroup.Append>\r\n                        </InputGroup>\r\n                    </div>\r\n\r\n                </Card.Footer>\r\n            </Card>\r\n        )\r\n    }\r\n}\r\n\r\nconst x = state => {\r\n    return {\r\n        deleteBookObject: state.book,\r\n      \r\n\r\n\r\n    }\r\n};\r\nconst y = dispatch => {\r\n    return {\r\n        deleteBook: (bookId) => dispatch(deleteBook(bookId)),\r\n        \r\n    }\r\n};\r\nexport default connect(x, y)(BookList);\r\n","C:\\Users\\Avanza\\Desktop\\React js\\Book Project\\book-project\\src\\component\\Book\\Book.js",["113"],"import React from \"react\";\r\nimport { Card, Form, Button, Col } from \"react-bootstrap\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faEdit, faList, faPlusSquare, faSave, faUndo } from '@fortawesome/free-solid-svg-icons';\r\nimport axios from 'axios';\r\nimport { connect } from 'react-redux';\r\nimport { saveBook,fetchBook,updateBook } from '../../services/books/bookActions';\r\n\r\nclass Book extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = this.initialState;\r\n        this.bookChange = this.bookChange.bind(this);\r\n        this.submitBook = this.submitBook.bind(this);\r\n    }\r\n    initialState = {\r\n        id: '', title: '', author: '', coverPhotoUrl: '', isbnNumber: '', price: '', language: ''\r\n    }\r\n\r\n    componentDidMount() {\r\n        const bookId = +this.props.match.params.id;\r\n        if (bookId) {\r\n            this.findBookbyId(bookId);\r\n        }\r\n    };\r\n\r\n    findBookbyId = (bookId) => {\r\n\r\n        this.props.fetchBook(bookId);\r\n\r\n        let books=this.props.bookObject.books;\r\n\r\n       \r\n        if (books != null) {\r\n            this.setState({\r\n                id: books.id,\r\n                title: books.title,\r\n                author: books.author,\r\n                coverPhotoUrl: books.coverPhotoURL,\r\n                isbnNumber: books.isbnNumber,\r\n                price: books.price,\r\n                language: books.language\r\n\r\n            });\r\n        \r\n        }\r\n\r\n    \r\n        // axios.get(\"http://localhost:8081/rest/books/\" + bookId)\r\n        //     .then(response => {\r\n        //         if (response.data != null) {\r\n        //             this.setState({\r\n        //                 id: response.data.id,\r\n        //                 title: response.data.title,\r\n        //                 author: response.data.author,\r\n        //                 coverPhotoUrl: response.data.coverPhotoURL,\r\n        //                 isbnNumber: response.data.isbnNumber,\r\n        //                 price: response.data.price,\r\n        //                 language: response.data.language\r\n\r\n        //             })\r\n        //         }\r\n\r\n        //     }).catch((error) => {\r\n        //         console.error(\"Error \" + error);\r\n        //     });\r\n    }\r\n    resetBook = () => {\r\n        this.setState(() => this.initialState)\r\n    };\r\n    bookList = () => {\r\n        return this.props.history.push(\"/list\");\r\n    };\r\n    submitBook = event => {\r\n        event.preventDefault();\r\n        const book = {\r\n            title: this.state.title,\r\n            author: this.state.author,\r\n            coverPhotoURL: this.state.coverPhotoUrl,\r\n            isbnNumber: this.state.isbnNumber,\r\n            price: this.state.price,\r\n            language: this.state.language\r\n        };\r\n        this.props.saveBook(book);\r\n\r\n\r\n\r\n\r\n        // axios.post(\"http://localhost:8081/rest/books\", book)\r\n        // .then(response=>{\r\n        //     console.log(\"response\", response);\r\n        //     if(response.data !=null){\r\n        //         this.setState(this.initialState);\r\n        //         alert(\"Book Saved Successful\");\r\n\r\n        //     }\r\n        // })\r\n        setTimeout(() => {\r\n            if(this.props.saveBookObject !=null){\r\n                        this.setState(this.initialState);\r\n                        alert(\"Book Saved Successful\");\r\n        \r\n                    }\r\n        }, 2000);\r\n\r\n    }\r\n    updateBook = event => {\r\n\r\n        event.preventDefault();\r\n        const book = {\r\n            id: this.state.id,\r\n            title: this.state.title,\r\n            author: this.state.author,\r\n            coverPhotoURL: this.state.coverPhotoUrl,\r\n            isbnNumber: this.state.isbnNumber,\r\n            price: this.state.price,\r\n            language: this.state.language\r\n        };\r\n        console.log(\"book\", book)\r\n\r\n        // axios.put(\"http://localhost:8081/rest/books\", book)\r\n        //     .then(response => {\r\n        //         console.log(\"response\", response);\r\n        //         if (response.data != null) {\r\n        //             this.setState(this.initialState);\r\n        //             alert(\"Book Updated\");\r\n\r\n        //         }\r\n        //     })\r\n                this.props.updateBook(book);\r\n                setTimeout(() => {\r\n                    if (this.props.updateBookObject != null) {\r\n                                    this.setState(this.initialState);\r\n                                    alert(\"Book Updated\");\r\n                \r\n                                }\r\n                }, 2000);\r\n    };\r\n\r\n    bookChange = event => {\r\n        this.setState({\r\n            [event.target.name]: event.target.value\r\n        });\r\n    }\r\n    \r\n\r\n    render() {\r\n        const { title, author, coverPhotoUrl, isbnNumber, price, language } = this.state;\r\n        return (\r\n            <Card className=\" border border-dark bg-dark text-white\">\r\n                <Card.Header>                <FontAwesomeIcon icon={this.state.id ? faEdit : faPlusSquare} />{this.state.id ? \" Update Book\" : \" Add New Book\"}</Card.Header>\r\n                <Form onReset={this.resetBook} onSubmit={this.state.id ? this.updateBook : this.submitBook} id=\"bookFormId\">\r\n                    <Card.Body>\r\n\r\n                        <Form.Row>\r\n                            <Form.Group as={Col} controlId=\"formGirdTitle\">\r\n                                <Form.Label>Title</Form.Label>\r\n                                <Form.Control type=\"text\" name=\"title\" required autoComplete=\"off\"\r\n                                    value={title}\r\n                                    onChange={this.bookChange}\r\n                                    className=\"bg-dark text-white\"\r\n                                    placeholder=\"Enter Book Title\" />\r\n\r\n                            </Form.Group>\r\n                            <Form.Group as={Col} controlId=\"formGirdAuthor\">\r\n                                <Form.Label>Author</Form.Label>\r\n                                <Form.Control type=\"text\" name=\"author\" required autoComplete=\"off\"\r\n                                    value={author}\r\n                                    onChange={this.bookChange}\r\n                                    className=\"bg-dark text-white\"\r\n                                    placeholder=\"Enter Book Author\" />\r\n\r\n                            </Form.Group>\r\n                        </Form.Row>\r\n\r\n\r\n                        <Form.Row>\r\n                            <Form.Group as={Col} controlId=\"formGirdCoverPhotoUrl\">\r\n                                <Form.Label>Cover Photo URL </Form.Label>\r\n                                <Form.Control type=\"text\" name=\"coverPhotoUrl\" required autoComplete=\"off\"\r\n                                    value={coverPhotoUrl}\r\n                                    onChange={this.bookChange}\r\n                                    className=\"bg-dark text-white\"\r\n                                    placeholder=\"Enter Book Cover Photo URL\" />\r\n\r\n                            </Form.Group>\r\n                            <Form.Group as={Col} controlId=\"formGirdISBNNumber\" >\r\n                                <Form.Label>ISBN Number</Form.Label>\r\n                                <Form.Control type=\"number\" name=\"isbnNumber\" required autoComplete=\"off\"\r\n                                    value={isbnNumber}\r\n                                    onChange={this.bookChange}\r\n                                    className=\"bg-dark text-white\"\r\n                                    placeholder=\"Enter Book ISBN Number\" />\r\n\r\n                            </Form.Group>\r\n                        </Form.Row>\r\n\r\n\r\n                        <Form.Row>\r\n                            <Form.Group as={Col} controlId=\"formGirdPrice\">\r\n                                <Form.Label>Price</Form.Label>\r\n                                <Form.Control type=\"number\" name=\"price\" required autoComplete=\"off\"\r\n                                    value={price}\r\n                                    onChange={this.bookChange}\r\n                                    className=\"bg-dark text-white\"\r\n                                    placeholder=\"Enter Book Price\" />\r\n\r\n                            </Form.Group>\r\n                            <Form.Group as={Col} controlId=\"formGirdLanguage\">\r\n                                <Form.Label>Language</Form.Label>\r\n                                <Form.Control type=\"textname\" name=\"language\" required autoComplete=\"off\"\r\n                                    value={language}\r\n                                    onChange={this.bookChange}\r\n                                    className=\"bg-dark text-white\"\r\n                                    placeholder=\"Enter Book Language\" />\r\n\r\n                            </Form.Group>\r\n                        </Form.Row>\r\n\r\n\r\n\r\n                    </Card.Body>\r\n                    <Card.Footer style={{ \"textAlign\": \"right\" }}>\r\n                        <Button size=\"sm\" variant=\"success\" type=\"submit\">\r\n                            <FontAwesomeIcon icon={faSave} />{this.state.id ? \" Update\" : \" Save\"}\r\n                        </Button>{' '}\r\n                        <Button size=\"sm\" variant=\"info\" type=\"reset\" >\r\n                            <FontAwesomeIcon icon={faUndo} />   Reset\r\n                         </Button>{' '}\r\n                        <Button size=\"sm\" variant=\"info\" type=\"button\" onClick={this.bookList.bind()} >\r\n                            <FontAwesomeIcon icon={faList} />   Book List\r\n                         </Button>\r\n                    </Card.Footer>\r\n                </Form>\r\n\r\n            </Card>\r\n        )\r\n    }\r\n}\r\n\r\nconst x = state => {\r\n    return {\r\n        saveBookObject: state.book,\r\n        bookObject: state.book,\r\n        updateBookObject: state.book\r\n\r\n\r\n    }\r\n};\r\nconst y = dispatch => {\r\n    return {\r\n        saveBook: (book) => dispatch(saveBook(book)),\r\n        fetchBook: (bookId) => dispatch(fetchBook(bookId)),\r\n        updateBook: (book) => dispatch(updateBook(book))\r\n\r\n    }\r\n};\r\nexport default connect(x, y)(Book);",{"ruleId":"114","severity":1,"message":"115","line":5,"column":8,"nodeType":"116","messageId":"117","endLine":5,"endColumn":23},{"ruleId":"114","severity":1,"message":"118","line":8,"column":35,"nodeType":"116","messageId":"117","endLine":8,"endColumn":41},{"ruleId":"119","severity":1,"message":"120","line":20,"column":24,"nodeType":"121","endLine":20,"endColumn":43},{"ruleId":"122","replacedBy":"123"},{"ruleId":"124","replacedBy":"125"},{"ruleId":"114","severity":1,"message":"126","line":5,"column":34,"nodeType":"116","messageId":"117","endLine":5,"endColumn":46},{"ruleId":"127","severity":1,"message":"128","line":10,"column":93,"nodeType":"129","messageId":"130","endLine":10,"endColumn":94,"fix":"131"},{"ruleId":"127","severity":1,"message":"128","line":13,"column":11,"nodeType":"129","messageId":"130","endLine":13,"endColumn":12,"fix":"132"},{"ruleId":"127","severity":1,"message":"128","line":10,"column":61,"nodeType":"129","messageId":"130","endLine":10,"endColumn":62,"fix":"133"},{"ruleId":"127","severity":1,"message":"128","line":13,"column":11,"nodeType":"129","messageId":"130","endLine":13,"endColumn":12,"fix":"134"},{"ruleId":"127","severity":1,"message":"128","line":36,"column":64,"nodeType":"129","messageId":"130","endLine":36,"endColumn":65,"fix":"135"},{"ruleId":"127","severity":1,"message":"128","line":39,"column":11,"nodeType":"129","messageId":"130","endLine":39,"endColumn":12,"fix":"136"},{"ruleId":"127","severity":1,"message":"128","line":55,"column":60,"nodeType":"129","messageId":"130","endLine":55,"endColumn":61,"fix":"137"},{"ruleId":"127","severity":1,"message":"128","line":58,"column":11,"nodeType":"129","messageId":"130","endLine":58,"endColumn":12,"fix":"138"},{"ruleId":"127","severity":1,"message":"128","line":88,"column":68,"nodeType":"129","messageId":"130","endLine":88,"endColumn":69,"fix":"139"},{"ruleId":"127","severity":1,"message":"128","line":91,"column":11,"nodeType":"129","messageId":"130","endLine":91,"endColumn":12,"fix":"140"},{"ruleId":"114","severity":1,"message":"141","line":8,"column":8,"nodeType":"116","messageId":"117","endLine":8,"endColumn":13},{"ruleId":"114","severity":1,"message":"141","line":5,"column":8,"nodeType":"116","messageId":"117","endLine":5,"endColumn":13},"no-unused-vars","'reportWebVitals' is defined but never used.","Identifier","unusedVar","'Switch' is defined but never used.","react/style-prop-object","Style prop value must be an object","JSXAttribute","no-native-reassign",["142"],"no-negated-in-lhs",["143"],"'faSignOutAlt' is defined but never used.","dot-location","Expected dot to be on same line as property.","MemberExpression","expectedDotBeforeProperty",{"range":"144","text":"145"},{"range":"146","text":"145"},{"range":"147","text":"145"},{"range":"148","text":"145"},{"range":"149","text":"145"},{"range":"150","text":"145"},{"range":"151","text":"145"},{"range":"152","text":"145"},{"range":"153","text":"145"},{"range":"154","text":"145"},"'axios' is defined but never used.","no-global-assign","no-unsafe-negation",[314,325],"\r\n        .",[413,424],[329,340],[423,434],[889,900],[983,994],[1352,1363],[1446,1457],[2050,2061],[2144,2155]]