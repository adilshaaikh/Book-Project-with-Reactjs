{"ast":null,"code":"import * as AT from './authTypes';\nimport axios from 'axios';\nexport const authenticateUser = (email, password) => {\n  const credentials = {\n    email: email,\n    password: password\n  };\n  return dispatch => {\n    dispatch({\n      type: AT.LOGIN_REQUEST\n    });\n    axios.post(\"http://localhost:8081/rest/user/authenticate\", credentials).then(response => {\n      let token = response.data.token;\n      localStorage.setItem('jwtToken', token);\n      dispatch(success(true));\n    }).catch(error => {\n      dispatch(failure());\n    });\n  };\n};\nexport const logoutUser = () => {\n  return dispatch => {\n    dispatch({\n      type: AT.LOGOUT_REQUEST\n    });\n    localStorage.removeItem('jwtToken');\n    dispatch(success(false));\n  };\n};\n\nconst success = isLoggedIn => {\n  return {\n    type: AT.SUCCESS,\n    payload: isLoggedIn\n  };\n};\n\nconst failure = () => {\n  return {\n    type: AT.FAILURE,\n    payload: false\n  };\n};","map":{"version":3,"sources":["C:/Users/Avanza/Desktop/React js/Book Project/book-project/src/services/auth/authActions.js"],"names":["AT","axios","authenticateUser","email","password","credentials","dispatch","type","LOGIN_REQUEST","post","then","response","token","data","localStorage","setItem","success","catch","error","failure","logoutUser","LOGOUT_REQUEST","removeItem","isLoggedIn","SUCCESS","payload","FAILURE"],"mappings":"AAAA,OAAO,KAAKA,EAAZ,MAAoB,aAApB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAO,MAAMC,gBAAgB,GAAG,CAACC,KAAD,EAAQC,QAAR,KAAqB;AACjD,QAAMC,WAAW,GAAG;AAChBF,IAAAA,KAAK,EAAEA,KADS;AAEhBC,IAAAA,QAAQ,EAAEA;AAFM,GAApB;AAIA,SAAOE,QAAQ,IAAI;AACfA,IAAAA,QAAQ,CAAC;AACLC,MAAAA,IAAI,EAAEP,EAAE,CAACQ;AADJ,KAAD,CAAR;AAGAP,IAAAA,KAAK,CAACQ,IAAN,CAAW,8CAAX,EAA2DJ,WAA3D,EACKK,IADL,CACUC,QAAQ,IAAI;AACd,UAAIC,KAAK,GAAGD,QAAQ,CAACE,IAAT,CAAcD,KAA1B;AACAE,MAAAA,YAAY,CAACC,OAAb,CAAqB,UAArB,EAAiCH,KAAjC;AACAN,MAAAA,QAAQ,CAACU,OAAO,CAAC,IAAD,CAAR,CAAR;AACH,KALL,EAMKC,KANL,CAMWC,KAAK,IAAI;AACZZ,MAAAA,QAAQ,CAACa,OAAO,EAAR,CAAR;AACH,KARL;AASH,GAbD;AAcH,CAnBM;AAqBP,OAAO,MAAMC,UAAU,GAAG,MAAM;AAC5B,SAAOd,QAAQ,IAAI;AACfA,IAAAA,QAAQ,CAAC;AACLC,MAAAA,IAAI,EAAEP,EAAE,CAACqB;AADJ,KAAD,CAAR;AAGAP,IAAAA,YAAY,CAACQ,UAAb,CAAwB,UAAxB;AACAhB,IAAAA,QAAQ,CAACU,OAAO,CAAC,KAAD,CAAR,CAAR;AACH,GAND;AAOH,CARM;;AAUP,MAAMA,OAAO,GAAGO,UAAU,IAAI;AAC1B,SAAO;AACHhB,IAAAA,IAAI,EAAEP,EAAE,CAACwB,OADN;AAEHC,IAAAA,OAAO,EAAEF;AAFN,GAAP;AAIH,CALD;;AAOA,MAAMJ,OAAO,GAAG,MAAM;AAClB,SAAO;AACHZ,IAAAA,IAAI,EAAEP,EAAE,CAAC0B,OADN;AAEHD,IAAAA,OAAO,EAAE;AAFN,GAAP;AAIH,CALD","sourcesContent":["import * as AT from './authTypes';\r\nimport axios from 'axios';\r\n\r\nexport const authenticateUser = (email, password) => {\r\n    const credentials = {\r\n        email: email,\r\n        password: password\r\n    };\r\n    return dispatch => {\r\n        dispatch({\r\n            type: AT.LOGIN_REQUEST\r\n        });\r\n        axios.post(\"http://localhost:8081/rest/user/authenticate\", credentials)\r\n            .then(response => {\r\n                let token = response.data.token;\r\n                localStorage.setItem('jwtToken', token);\r\n                dispatch(success(true));\r\n            })\r\n            .catch(error => {\r\n                dispatch(failure());\r\n            });\r\n    };\r\n};\r\n\r\nexport const logoutUser = () => {\r\n    return dispatch => {\r\n        dispatch({\r\n            type: AT.LOGOUT_REQUEST\r\n        });\r\n        localStorage.removeItem('jwtToken');\r\n        dispatch(success(false));\r\n    };\r\n};\r\n\r\nconst success = isLoggedIn => {\r\n    return {\r\n        type: AT.SUCCESS,\r\n        payload: isLoggedIn\r\n    };\r\n};\r\n\r\nconst failure = () => {\r\n    return {\r\n        type: AT.FAILURE,\r\n        payload: false\r\n    };\r\n};"]},"metadata":{},"sourceType":"module"}