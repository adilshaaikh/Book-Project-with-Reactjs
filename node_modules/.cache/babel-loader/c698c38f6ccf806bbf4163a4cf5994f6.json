{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Avanza\\\\Desktop\\\\React js\\\\Book Project\\\\book-project\\\\src\\\\component\\\\UserList.js\";\nimport React, { Component } from 'react';\nimport { Alert, Button, Card, FormControl, InputGroup, Table } from \"react-bootstrap\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faFastBackward, faFastForward, faStepBackward, faStepForward, faUsers } from '@fortawesome/free-solid-svg-icons';\nimport { connect } from 'react-redux';\nimport { fetchUser } from '../services/users/userActions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass UserList extends Component {\n  constructor(props) {\n    super(props);\n\n    this.changePage = event => {\n      this.setState({\n        [event.target.name]: parseInt(event.target.value)\n      });\n    };\n\n    this.firstPage = () => {\n      if (this.state.currentPage > 1) {\n        this.setState({\n          currentPage: 1\n        });\n      }\n    };\n\n    this.prevPage = () => {\n      if (this.state.currentPage > 1) {\n        this.setState({\n          currentPage: this.state.currentPage - 1\n        });\n      }\n    };\n\n    this.nextPage = () => {\n      if (this.state.currentPage < Math.ceil(this.props.userData.users.length / this.state.userPerPage)) {\n        this.setState({\n          currentPage: this.state.currentPage + 1\n        });\n      }\n    };\n\n    this.lastPage = () => {\n      if (this.state.currentPage < Math.ceil(this.props.userData.users.length / this.state.userPerPage)) {\n        this.setState({\n          currentPage: Math.ceil(this.props.userData.users.length / this.state.userPerPage)\n        });\n      }\n    };\n\n    this.state = {\n      users: [],\n      currentPage: 1,\n      userPerPage: 5\n    };\n  }\n\n  componentDidMount() {\n    this.props.fetchUser();\n  }\n\n  render() {\n    const {\n      currentPage,\n      userPerPage\n    } = this.state;\n    const lastindex = currentPage * userPerPage;\n    const firstindex = lastindex - userPerPage;\n    const userData = this.props.userData;\n    const users = userData.users;\n    const currentUsers = users.slice(firstindex, lastindex);\n    const totalpages = users.length / userPerPage;\n    const pageNubCss = {\n      width: \"45px\",\n      border: \"1px solid #17A2B8\",\n      color: \"#17A2B8\",\n      textAlign: \"center\",\n      fontweight: \"bold\"\n    };\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: userData.error ? /*#__PURE__*/_jsxDEV(Alert, {\n        variant: \"danger\",\n        children: userData.error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(Card, {\n        className: \" border border-dark bg-dark text-white\",\n        children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n          children: [\" \", /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            icon: faUsers\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 39\n          }, this), \" User List\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n          children: /*#__PURE__*/_jsxDEV(Table, {\n            bordered: true,\n            hover: true,\n            striped: true,\n            variant: \"dark\",\n            children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n              children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  children: \"Name\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 98,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: \"Email\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 99,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: \"Address\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 100,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: \"Created\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 101,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: \"Balance\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 102,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 97,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n              children: users.length === 0 ? /*#__PURE__*/_jsxDEV(\"tr\", {\n                align: \"center\",\n                children: /*#__PURE__*/_jsxDEV(\"td\", {\n                  colSpan: \"5\",\n                  children: \"No Users Avaiable\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 109,\n                  columnNumber: 45\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 108,\n                columnNumber: 41\n              }, this) : currentUsers.map((user, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  children: [user.first, ' ', user.last]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 113,\n                  columnNumber: 49\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: user.email\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 114,\n                  columnNumber: 49\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: user.address\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 116,\n                  columnNumber: 49\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: user.created\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 117,\n                  columnNumber: 49\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: user.balance\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 118,\n                  columnNumber: 49\n                }, this)]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 112,\n                columnNumber: 45\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Card.Footer, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              \"float\": \"left\"\n            },\n            children: [\"Showing Page \", currentPage, \" of \", totalpages]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              \"float\": \"right\"\n            },\n            children: /*#__PURE__*/_jsxDEV(InputGroup, {\n              size: \"sm\",\n              children: [/*#__PURE__*/_jsxDEV(InputGroup.Prepend, {\n                children: [/*#__PURE__*/_jsxDEV(Button, {\n                  type: \"button\",\n                  variant: \"outline-info\",\n                  disabled: currentPage === 1 ? true : false,\n                  onClick: this.firstPage,\n                  children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                    icon: faFastBackward\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 137,\n                    columnNumber: 45\n                  }, this), \"  First\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 134,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(Button, {\n                  type: \"button\",\n                  variant: \"outline-info\",\n                  disabled: currentPage === 1 ? true : false,\n                  onClick: this.prevPage,\n                  children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                    icon: faStepBackward\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 143,\n                    columnNumber: 45\n                  }, this), \"  Prev\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 139,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 133,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n                style: pageNubCss,\n                className: \"bg-dark\",\n                name: \"currentPage\",\n                value: currentPage,\n                onChange: this.changePage\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 146,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(InputGroup.Append, {\n                children: [/*#__PURE__*/_jsxDEV(Button, {\n                  type: \"button\",\n                  variant: \"outline-info\",\n                  disabled: currentPage === totalpages ? true : false,\n                  onClick: this.nextPage,\n                  children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                    icon: faStepForward\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 154,\n                    columnNumber: 45\n                  }, this), \" Next\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 150,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(Button, {\n                  type: \"button\",\n                  variant: \"outline-info\",\n                  disabled: currentPage === totalpages ? true : false,\n                  onClick: this.lastPage,\n                  children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                    icon: faFastForward\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 160,\n                    columnNumber: 45\n                  }, this), \"  Last\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 156,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 149,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 132,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nconst x = state => {\n  return {\n    userData: state.user\n  };\n};\n\nconst y = dispatch => {\n  return {\n    fetchUser: () => dispatch(fetchUser())\n  };\n};\n\nexport default connect(x, y)(UserList);","map":{"version":3,"sources":["C:/Users/Avanza/Desktop/React js/Book Project/book-project/src/component/UserList.js"],"names":["React","Component","Alert","Button","Card","FormControl","InputGroup","Table","FontAwesomeIcon","faFastBackward","faFastForward","faStepBackward","faStepForward","faUsers","connect","fetchUser","UserList","constructor","props","changePage","event","setState","target","name","parseInt","value","firstPage","state","currentPage","prevPage","nextPage","Math","ceil","userData","users","length","userPerPage","lastPage","componentDidMount","render","lastindex","firstindex","currentUsers","slice","totalpages","pageNubCss","width","border","color","textAlign","fontweight","error","map","user","index","first","last","email","address","created","balance","x","y","dispatch"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { Alert, Button, Card, FormControl, InputGroup, Table } from \"react-bootstrap\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faFastBackward, faFastForward, faStepBackward, faStepForward, faUsers } from '@fortawesome/free-solid-svg-icons'\r\nimport { connect } from 'react-redux';\r\nimport { fetchUser } from '../services/users/userActions';\r\nclass UserList extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            users: [],\r\n            currentPage: 1,\r\n            userPerPage: 5\r\n        }\r\n    };\r\n\r\n    componentDidMount() {\r\n        this.props.fetchUser();\r\n    };\r\n\r\n    // findAllRandomuser() {\r\n    //     axios.get(\"https://randomapi.com/api/6de6abfedb24f889e0b5f675edc50deb?fmt=raw&sole\")\r\n    //         .then(response => response.data)\r\n    //         .then((data) => {\r\n    //             this.setState({ users: data });\r\n    //         });\r\n    // };\r\n\r\n    changePage = event => {\r\n        this.setState({\r\n            [event.target.name]: parseInt(event.target.value)\r\n        });\r\n    };\r\n\r\n    firstPage = () => {\r\n        if (this.state.currentPage > 1) {\r\n            this.setState({\r\n                currentPage: 1\r\n            })\r\n        }\r\n    };\r\n\r\n    prevPage = () => {\r\n        if (this.state.currentPage > 1) {\r\n            this.setState({\r\n                currentPage: this.state.currentPage - 1\r\n            })\r\n        }\r\n\r\n    };\r\n    nextPage = () => {\r\n        if (this.state.currentPage < Math.ceil(this.props.userData.users.length / this.state.userPerPage)) {\r\n            this.setState({\r\n                currentPage: this.state.currentPage + 1\r\n            })\r\n        }\r\n    };\r\n    lastPage = () => {\r\n        if (this.state.currentPage < Math.ceil(this.props.userData.users.length / this.state.userPerPage)) {\r\n            this.setState({\r\n                currentPage: Math.ceil(this.props.userData.users.length / this.state.userPerPage)\r\n            })\r\n        }\r\n\r\n    };\r\n\r\n\r\n\r\n    render() {\r\n        const { currentPage, userPerPage } = this.state;\r\n        const lastindex = currentPage * userPerPage;\r\n        const firstindex = lastindex - userPerPage;\r\n        const userData=this.props.userData;\r\n        const users=userData.users;\r\n        const currentUsers = users.slice(firstindex, lastindex);\r\n        const totalpages = users.length / userPerPage;\r\n\r\n        const pageNubCss = {\r\n            width: \"45px\",\r\n            border: \"1px solid #17A2B8\",\r\n            color: \"#17A2B8\",\r\n            textAlign: \"center\",\r\n            fontweight: \"bold\"\r\n        }\r\n        return (\r\n            <div>\r\n                {userData.error ?\r\n                    <Alert variant=\"danger\">\r\n                        {userData.error}\r\n                    </Alert> :\r\n                    <Card className=\" border border-dark bg-dark text-white\">\r\n                        <Card.Header> <FontAwesomeIcon icon={faUsers} /> User List</Card.Header>\r\n                        <Card.Body>\r\n                            <Table bordered hover striped variant=\"dark\">\r\n                                <thead>\r\n                                    <tr>\r\n                                        <td>Name</td>\r\n                                        <td>Email</td>\r\n                                        <td>Address</td>\r\n                                        <td>Created</td>\r\n                                        <td>Balance</td>\r\n\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    {users.length === 0 ?\r\n                                        <tr align=\"center\">\r\n                                            <td colSpan=\"5\">No Users Avaiable</td>\r\n                                        </tr> :\r\n                                        currentUsers.map((user, index) => (\r\n                                            <tr key={index}>\r\n                                                <td>{user.first}{' '}{user.last}</td>\r\n                                                <td>{user.email}</td>\r\n\r\n                                                <td>{user.address}</td>\r\n                                                <td>{user.created}</td>\r\n                                                <td>{user.balance}</td>\r\n\r\n                                            </tr>\r\n                                        ))\r\n                                    }\r\n                                </tbody>\r\n                            </Table>\r\n                        </Card.Body>\r\n                        <Card.Footer>\r\n                            <div style={{ \"float\": \"left\" }}>\r\n                                Showing Page {currentPage} of {totalpages}\r\n\r\n                            </div>\r\n                            <div style={{ \"float\": \"right\" }}>\r\n                                <InputGroup size=\"sm\">\r\n                                    <InputGroup.Prepend>\r\n                                        <Button type=\"button\" variant=\"outline-info\" disabled={currentPage === 1 ? true : false}\r\n                                            onClick={this.firstPage}\r\n                                        >\r\n                                            <FontAwesomeIcon icon={faFastBackward} />  First\r\n                             </Button>\r\n                                        <Button type=\"button\" variant=\"outline-info\" disabled={currentPage === 1 ? true : false}\r\n                                            onClick={this.prevPage}\r\n\r\n                                        >\r\n                                            <FontAwesomeIcon icon={faStepBackward} />  Prev\r\n                             </Button>\r\n                                    </InputGroup.Prepend>\r\n                                    <FormControl style={pageNubCss} className=\"bg-dark\" name=\"currentPage\"\r\n                                        value={currentPage} onChange={this.changePage}\r\n                                    />\r\n                                    <InputGroup.Append>\r\n                                        <Button type=\"button\" variant=\"outline-info\" disabled={currentPage === totalpages ? true : false}\r\n                                            onClick={this.nextPage}\r\n\r\n                                        >\r\n                                            <FontAwesomeIcon icon={faStepForward} /> Next\r\n                             </Button>\r\n                                        <Button type=\"button\" variant=\"outline-info\" disabled={currentPage === totalpages ? true : false}\r\n                                            onClick={this.lastPage}\r\n\r\n                                        >\r\n                                            <FontAwesomeIcon icon={faFastForward} />  Last\r\n                             </Button>\r\n                                    </InputGroup.Append>\r\n                                </InputGroup>\r\n                            </div>\r\n\r\n                        </Card.Footer>\r\n                    </Card>\r\n                }\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst x = state => {\r\n    return {\r\n        userData: state.user\r\n    }\r\n};\r\nconst y = dispatch => {\r\n    return {\r\n        fetchUser: () => dispatch(fetchUser())\r\n    }\r\n};\r\nexport default connect(x, y)(UserList);"]},"metadata":{},"sourceType":"module"}