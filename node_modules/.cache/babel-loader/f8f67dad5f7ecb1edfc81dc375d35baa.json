{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Avanza\\\\Desktop\\\\React js\\\\Book Project\\\\book-project\\\\src\\\\component\\\\Book.js\";\nimport React from \"react\";\nimport { Card, Form, Button, Col } from \"react-bootstrap\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faEdit, faList, faPlusSquare, faSave, faUndo } from '@fortawesome/free-solid-svg-icons';\nimport axios from 'axios';\nimport { connect } from 'react-redux';\nimport { saveBook, fetchBook, updateBook } from '../services/books/bookActions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Book extends React.Component {\n  constructor(props) {\n    super(props);\n    this.initialState = {\n      id: '',\n      title: '',\n      author: '',\n      coverPhotoUrl: '',\n      isbnNumber: '',\n      price: '',\n      language: ''\n    };\n\n    this.findBookbyId = bookId => {\n      //let book=this.props.bookObject.book;\n      if (this.props.bookChange.book != null) {\n        this.setState({\n          id: this.props.bookChange.book.id,\n          title: this.props.bookChange.book.title,\n          author: this.props.bookChange.book.author,\n          coverPhotoUrl: this.props.bookChange.book.coverPhotoURL,\n          isbnNumber: this.props.bookChange.book.isbnNumber,\n          price: this.props.bookChange.book.price,\n          language: this.props.bookChange.book.language\n        });\n        this.props.fetchBook(bookId);\n      } // axios.get(\"http://localhost:8081/rest/books/\" + bookId)\n      //     .then(response => {\n      //         if (response.data != null) {\n      //             this.setState({\n      //                 id: response.data.id,\n      //                 title: response.data.title,\n      //                 author: response.data.author,\n      //                 coverPhotoUrl: response.data.coverPhotoURL,\n      //                 isbnNumber: response.data.isbnNumber,\n      //                 price: response.data.price,\n      //                 language: response.data.language\n      //             })\n      //         }\n      //     }).catch((error) => {\n      //         console.error(\"Error \" + error);\n      //     });\n\n    };\n\n    this.resetBook = () => {\n      this.setState(() => this.initialState);\n    };\n\n    this.bookList = () => {\n      return this.props.history.push(\"/list\");\n    };\n\n    this.submitBook = event => {\n      event.preventDefault();\n      const book = {\n        title: this.state.title,\n        author: this.state.author,\n        coverPhotoURL: this.state.coverPhotoUrl,\n        isbnNumber: this.state.isbnNumber,\n        price: this.state.price,\n        language: this.state.language\n      };\n      this.props.saveBook(book); // axios.post(\"http://localhost:8081/rest/books\", book)\n      // .then(response=>{\n      //     console.log(\"response\", response);\n      //     if(response.data !=null){\n      //         this.setState(this.initialState);\n      //         alert(\"Book Saved Successful\");\n      //     }\n      // })\n\n      setTimeout(() => {\n        this.setState(this.initialState);\n        alert(\"Book Saved Successful\");\n      }, 2000);\n    };\n\n    this.updateBook = event => {\n      event.preventDefault();\n      const book = {\n        id: this.state.id,\n        title: this.state.title,\n        author: this.state.author,\n        coverPhotoURL: this.state.coverPhotoUrl,\n        isbnNumber: this.state.isbnNumber,\n        price: this.state.price,\n        language: this.state.language\n      };\n      console.log(\"book\", book); // axios.put(\"http://localhost:8081/rest/books\", book)\n      //     .then(response => {\n      //         console.log(\"response\", response);\n      //         if (response.data != null) {\n      //             this.setState(this.initialState);\n      //             alert(\"Book Updated\");\n      //         }\n      //     })\n\n      this.props.updateBook(book);\n      setTimeout(() => {\n        this.setState(this.initialState);\n        alert(\"Book update Successful\");\n      }, 2000);\n    };\n\n    this.bookChange = event => {\n      this.setState({\n        [event.target.name]: event.target.value\n      });\n    };\n\n    this.state = this.initialState;\n    this.bookChange = this.bookChange.bind(this);\n    this.submitBook = this.submitBook.bind(this);\n  }\n\n  componentDidMount() {\n    const bookId = +this.props.match.params.id;\n\n    if (bookId) {\n      this.findBookbyId(bookId);\n    }\n  }\n\n  render() {\n    const {\n      title,\n      author,\n      coverPhotoUrl,\n      isbnNumber,\n      price,\n      language\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(Card, {\n      className: \" border border-dark bg-dark text-white\",\n      children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n        children: [\"                \", /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n          icon: this.state.id ? faEdit : faPlusSquare\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 46\n        }, this), this.state.id ? \" Update Book\" : \" Add New Book\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form, {\n        onReset: this.resetBook,\n        onSubmit: this.state.id ? this.updateBook : this.submitBook,\n        id: \"bookFormId\",\n        children: [/*#__PURE__*/_jsxDEV(Card.Body, {\n          children: [/*#__PURE__*/_jsxDEV(Form.Row, {\n            children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n              as: Col,\n              controlId: \"formGirdTitle\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"Title\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 156,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                type: \"text\",\n                name: \"title\",\n                required: true,\n                autoComplete: \"off\",\n                value: title,\n                onChange: this.bookChange,\n                className: \"bg-dark text-white\",\n                placeholder: \"Enter Book Title\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 157,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 155,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n              as: Col,\n              controlId: \"formGirdAuthor\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"Author\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 165,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                type: \"text\",\n                name: \"author\",\n                required: true,\n                autoComplete: \"off\",\n                value: author,\n                onChange: this.bookChange,\n                className: \"bg-dark text-white\",\n                placeholder: \"Enter Book Author\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 166,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 164,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Row, {\n            children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n              as: Col,\n              controlId: \"formGirdCoverPhotoUrl\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"Cover Photo URL \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 178,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                type: \"text\",\n                name: \"coverPhotoUrl\",\n                required: true,\n                autoComplete: \"off\",\n                value: coverPhotoUrl,\n                onChange: this.bookChange,\n                className: \"bg-dark text-white\",\n                placeholder: \"Enter Book Cover Photo URL\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 179,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 177,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n              as: Col,\n              controlId: \"formGirdISBNNumber\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"ISBN Number\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 187,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                type: \"number\",\n                name: \"isbnNumber\",\n                required: true,\n                autoComplete: \"off\",\n                value: isbnNumber,\n                onChange: this.bookChange,\n                className: \"bg-dark text-white\",\n                placeholder: \"Enter Book ISBN Number\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 188,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 186,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Row, {\n            children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n              as: Col,\n              controlId: \"formGirdPrice\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"Price\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 200,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                type: \"number\",\n                name: \"price\",\n                required: true,\n                autoComplete: \"off\",\n                value: price,\n                onChange: this.bookChange,\n                className: \"bg-dark text-white\",\n                placeholder: \"Enter Book Price\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 201,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 199,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n              as: Col,\n              controlId: \"formGirdLanguage\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"Language\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 209,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                type: \"textname\",\n                name: \"language\",\n                required: true,\n                autoComplete: \"off\",\n                value: language,\n                onChange: this.bookChange,\n                className: \"bg-dark text-white\",\n                placeholder: \"Enter Book Language\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 210,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 208,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 198,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Card.Footer, {\n          style: {\n            \"textAlign\": \"right\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            size: \"sm\",\n            variant: \"success\",\n            type: \"submit\",\n            children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n              icon: faSave\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 224,\n              columnNumber: 29\n            }, this), this.state.id ? \" Update\" : \" Save\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 223,\n            columnNumber: 25\n          }, this), ' ', /*#__PURE__*/_jsxDEV(Button, {\n            size: \"sm\",\n            variant: \"info\",\n            type: \"reset\",\n            children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n              icon: faUndo\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 227,\n              columnNumber: 29\n            }, this), \"   Reset\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 226,\n            columnNumber: 25\n          }, this), ' ', /*#__PURE__*/_jsxDEV(Button, {\n            size: \"sm\",\n            variant: \"info\",\n            type: \"button\",\n            onClick: this.bookList.bind(),\n            children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n              icon: faList\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 230,\n              columnNumber: 29\n            }, this), \"   Book List\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 229,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nconst x = state => {\n  return {\n    saveBookObject: state.book,\n    bookObject: state.book,\n    updateBookObject: state.book\n  };\n};\n\nconst y = dispatch => {\n  return {\n    saveBook: book => dispatch(saveBook(book)),\n    fetchBook: bookId => dispatch(fetchBook(bookId)),\n    updateBook: book => dispatch(updateBook(book))\n  };\n};\n\nexport default connect(x, y)(Book);","map":{"version":3,"sources":["C:/Users/Avanza/Desktop/React js/Book Project/book-project/src/component/Book.js"],"names":["React","Card","Form","Button","Col","FontAwesomeIcon","faEdit","faList","faPlusSquare","faSave","faUndo","axios","connect","saveBook","fetchBook","updateBook","Book","Component","constructor","props","initialState","id","title","author","coverPhotoUrl","isbnNumber","price","language","findBookbyId","bookId","bookChange","book","setState","coverPhotoURL","resetBook","bookList","history","push","submitBook","event","preventDefault","state","setTimeout","alert","console","log","target","name","value","bind","componentDidMount","match","params","render","x","saveBookObject","bookObject","updateBookObject","y","dispatch"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { Card, Form, Button, Col } from \"react-bootstrap\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faEdit, faList, faPlusSquare, faSave, faUndo } from '@fortawesome/free-solid-svg-icons';\r\nimport axios from 'axios';\r\nimport { connect } from 'react-redux';\r\nimport { saveBook,fetchBook,updateBook } from '../services/books/bookActions';\r\n\r\nclass Book extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = this.initialState;\r\n        this.bookChange = this.bookChange.bind(this);\r\n        this.submitBook = this.submitBook.bind(this);\r\n    }\r\n    initialState = {\r\n        id: '', title: '', author: '', coverPhotoUrl: '', isbnNumber: '', price: '', language: ''\r\n    }\r\n\r\n    componentDidMount() {\r\n        const bookId = +this.props.match.params.id;\r\n        if (bookId) {\r\n            this.findBookbyId(bookId);\r\n        }\r\n    };\r\n\r\n    findBookbyId = (bookId) => {\r\n        //let book=this.props.bookObject.book;\r\n\r\n        if (this.props.bookChange.book != null) {\r\n            this.setState({\r\n                id: this.props.bookChange.book.id,\r\n                title: this.props.bookChange.book.title,\r\n                author: this.props.bookChange.book.author,\r\n                coverPhotoUrl: this.props.bookChange.book.coverPhotoURL,\r\n                isbnNumber: this.props.bookChange.book.isbnNumber,\r\n                price: this.props.bookChange.book.price,\r\n                language: this.props.bookChange.book.language\r\n\r\n            });\r\n        this.props.fetchBook(bookId);\r\n\r\n\r\n       \r\n     \r\n        \r\n        }\r\n\r\n    \r\n        // axios.get(\"http://localhost:8081/rest/books/\" + bookId)\r\n        //     .then(response => {\r\n        //         if (response.data != null) {\r\n        //             this.setState({\r\n        //                 id: response.data.id,\r\n        //                 title: response.data.title,\r\n        //                 author: response.data.author,\r\n        //                 coverPhotoUrl: response.data.coverPhotoURL,\r\n        //                 isbnNumber: response.data.isbnNumber,\r\n        //                 price: response.data.price,\r\n        //                 language: response.data.language\r\n\r\n        //             })\r\n        //         }\r\n\r\n        //     }).catch((error) => {\r\n        //         console.error(\"Error \" + error);\r\n        //     });\r\n    }\r\n    resetBook = () => {\r\n        this.setState(() => this.initialState)\r\n    };\r\n    bookList = () => {\r\n        return this.props.history.push(\"/list\");\r\n    };\r\n    submitBook = event => {\r\n        event.preventDefault();\r\n        const book = {\r\n            title: this.state.title,\r\n            author: this.state.author,\r\n            coverPhotoURL: this.state.coverPhotoUrl,\r\n            isbnNumber: this.state.isbnNumber,\r\n            price: this.state.price,\r\n            language: this.state.language\r\n        };\r\n        this.props.saveBook(book);\r\n\r\n\r\n\r\n\r\n        // axios.post(\"http://localhost:8081/rest/books\", book)\r\n        // .then(response=>{\r\n        //     console.log(\"response\", response);\r\n        //     if(response.data !=null){\r\n        //         this.setState(this.initialState);\r\n        //         alert(\"Book Saved Successful\");\r\n\r\n        //     }\r\n        // })\r\n        setTimeout(() => {\r\n            this.setState(this.initialState);\r\n\r\n            alert(\"Book Saved Successful\");\r\n        }, 2000);\r\n\r\n    }\r\n    updateBook = event => {\r\n\r\n        event.preventDefault();\r\n        const book = {\r\n            id: this.state.id,\r\n            title: this.state.title,\r\n            author: this.state.author,\r\n            coverPhotoURL: this.state.coverPhotoUrl,\r\n            isbnNumber: this.state.isbnNumber,\r\n            price: this.state.price,\r\n            language: this.state.language\r\n        };\r\n        console.log(\"book\", book)\r\n\r\n        // axios.put(\"http://localhost:8081/rest/books\", book)\r\n        //     .then(response => {\r\n        //         console.log(\"response\", response);\r\n        //         if (response.data != null) {\r\n        //             this.setState(this.initialState);\r\n        //             alert(\"Book Updated\");\r\n\r\n        //         }\r\n        //     })\r\n                this.props.updateBook(book);\r\n                setTimeout(() => {\r\n                    this.setState(this.initialState);\r\n        \r\n                    alert(\"Book update Successful\");\r\n                }, 2000);\r\n    };\r\n\r\n    bookChange = event => {\r\n        this.setState({\r\n            [event.target.name]: event.target.value\r\n        });\r\n    }\r\n    \r\n\r\n    render() {\r\n        const { title, author, coverPhotoUrl, isbnNumber, price, language } = this.state;\r\n        return (\r\n            <Card className=\" border border-dark bg-dark text-white\">\r\n                <Card.Header>                <FontAwesomeIcon icon={this.state.id ? faEdit : faPlusSquare} />{this.state.id ? \" Update Book\" : \" Add New Book\"}</Card.Header>\r\n                <Form onReset={this.resetBook} onSubmit={this.state.id ? this.updateBook : this.submitBook} id=\"bookFormId\">\r\n                    <Card.Body>\r\n\r\n                        <Form.Row>\r\n                            <Form.Group as={Col} controlId=\"formGirdTitle\">\r\n                                <Form.Label>Title</Form.Label>\r\n                                <Form.Control type=\"text\" name=\"title\" required autoComplete=\"off\"\r\n                                    value={title}\r\n                                    onChange={this.bookChange}\r\n                                    className=\"bg-dark text-white\"\r\n                                    placeholder=\"Enter Book Title\" />\r\n\r\n                            </Form.Group>\r\n                            <Form.Group as={Col} controlId=\"formGirdAuthor\">\r\n                                <Form.Label>Author</Form.Label>\r\n                                <Form.Control type=\"text\" name=\"author\" required autoComplete=\"off\"\r\n                                    value={author}\r\n                                    onChange={this.bookChange}\r\n                                    className=\"bg-dark text-white\"\r\n                                    placeholder=\"Enter Book Author\" />\r\n\r\n                            </Form.Group>\r\n                        </Form.Row>\r\n\r\n\r\n                        <Form.Row>\r\n                            <Form.Group as={Col} controlId=\"formGirdCoverPhotoUrl\">\r\n                                <Form.Label>Cover Photo URL </Form.Label>\r\n                                <Form.Control type=\"text\" name=\"coverPhotoUrl\" required autoComplete=\"off\"\r\n                                    value={coverPhotoUrl}\r\n                                    onChange={this.bookChange}\r\n                                    className=\"bg-dark text-white\"\r\n                                    placeholder=\"Enter Book Cover Photo URL\" />\r\n\r\n                            </Form.Group>\r\n                            <Form.Group as={Col} controlId=\"formGirdISBNNumber\" >\r\n                                <Form.Label>ISBN Number</Form.Label>\r\n                                <Form.Control type=\"number\" name=\"isbnNumber\" required autoComplete=\"off\"\r\n                                    value={isbnNumber}\r\n                                    onChange={this.bookChange}\r\n                                    className=\"bg-dark text-white\"\r\n                                    placeholder=\"Enter Book ISBN Number\" />\r\n\r\n                            </Form.Group>\r\n                        </Form.Row>\r\n\r\n\r\n                        <Form.Row>\r\n                            <Form.Group as={Col} controlId=\"formGirdPrice\">\r\n                                <Form.Label>Price</Form.Label>\r\n                                <Form.Control type=\"number\" name=\"price\" required autoComplete=\"off\"\r\n                                    value={price}\r\n                                    onChange={this.bookChange}\r\n                                    className=\"bg-dark text-white\"\r\n                                    placeholder=\"Enter Book Price\" />\r\n\r\n                            </Form.Group>\r\n                            <Form.Group as={Col} controlId=\"formGirdLanguage\">\r\n                                <Form.Label>Language</Form.Label>\r\n                                <Form.Control type=\"textname\" name=\"language\" required autoComplete=\"off\"\r\n                                    value={language}\r\n                                    onChange={this.bookChange}\r\n                                    className=\"bg-dark text-white\"\r\n                                    placeholder=\"Enter Book Language\" />\r\n\r\n                            </Form.Group>\r\n                        </Form.Row>\r\n\r\n\r\n\r\n                    </Card.Body>\r\n                    <Card.Footer style={{ \"textAlign\": \"right\" }}>\r\n                        <Button size=\"sm\" variant=\"success\" type=\"submit\">\r\n                            <FontAwesomeIcon icon={faSave} />{this.state.id ? \" Update\" : \" Save\"}\r\n                        </Button>{' '}\r\n                        <Button size=\"sm\" variant=\"info\" type=\"reset\" >\r\n                            <FontAwesomeIcon icon={faUndo} />   Reset\r\n                         </Button>{' '}\r\n                        <Button size=\"sm\" variant=\"info\" type=\"button\" onClick={this.bookList.bind()} >\r\n                            <FontAwesomeIcon icon={faList} />   Book List\r\n                         </Button>\r\n                    </Card.Footer>\r\n                </Form>\r\n\r\n            </Card>\r\n        )\r\n    }\r\n}\r\n\r\nconst x = state => {\r\n    return {\r\n        saveBookObject: state.book,\r\n        bookObject: state.book,\r\n        updateBookObject: state.book\r\n\r\n\r\n    }\r\n};\r\nconst y = dispatch => {\r\n    return {\r\n        saveBook: (book) => dispatch(saveBook(book)),\r\n        fetchBook: (bookId) => dispatch(fetchBook(bookId)),\r\n        updateBook: (book) => dispatch(updateBook(book))\r\n\r\n    }\r\n};\r\nexport default connect(x, y)(Book);"]},"metadata":{},"sourceType":"module"}